# -*- coding: utf-8 -*-
"""retrain_drift.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zu4z3TXp7a9iOhOtjo4XGh54Jj3ZoBDQ
"""

#  RETRAINING ONLY â€” assuming drift already confirmed

import pandas as pd
import joblib
import os
import mlflow
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load new dataset with known drift
new_df = pd.read_csv("data/processed_telco.csv")

# Prepare features/target
X = new_df.drop("Churn", axis=1)
y = new_df["Churn"]
X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
acc = accuracy_score(y_test, y_pred)
print("Retrained model accuracy:", acc)

# Save
os.makedirs("models", exist_ok=True)
joblib.dump(model, "models/model_retrained.pkl")

# Log
mlflow.set_experiment("ML Monitoring Drift Project")
with mlflow.start_run(run_name="retrained_rf_confirmed_drift"):
    mlflow.log_metric("accuracy", acc)
    mlflow.sklearn.log_model(model, "retrained_model")
    print("Model retrained and logged (drift was already confirmed).")

